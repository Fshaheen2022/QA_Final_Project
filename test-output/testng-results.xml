<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-16T19:40:37 CST" name="Suite" finished-at="2023-02-16T19:41:13 CST" duration-ms="36281">
    <groups>
    </groups>
    <test started-at="2023-02-16T19:40:37 CST" name="TestFailure" finished-at="2023-02-16T19:40:49 CST" duration-ms="12264">
      <class name="test.FailureTest">
        <test-method signature="failure()[pri:0, instance:test.FailureTest@528c868]" started-at="2023-02-16T19:40:37 CST" name="failure" finished-at="2023-02-16T19:40:48 CST" duration-ms="11344" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.FailureTest.failure(FailureTest.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failure -->
        <test-method is-config="true" signature="closingBrowser()[pri:0, instance:test.FailureTest@528c868]" started-at="2023-02-16T19:40:48 CST" name="closingBrowser" finished-at="2023-02-16T19:40:49 CST" duration-ms="753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closingBrowser -->
      </class> <!-- test.FailureTest -->
    </test> <!-- TestFailure -->
    <test started-at="2023-02-16T19:40:37 CST" name="TestAlert" finished-at="2023-02-16T19:40:53 CST" duration-ms="15846">
      <class name="test.AlertHandlingTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:test.AlertHandlingTest@30c93896]" started-at="2023-02-16T19:40:37 CST" name="openApplication" finished-at="2023-02-16T19:40:49 CST" duration-ms="12063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="alertHandling()[pri:0, instance:test.AlertHandlingTest@30c93896]" started-at="2023-02-16T19:40:49 CST" name="alertHandling" finished-at="2023-02-16T19:40:52 CST" duration-ms="2965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertHandling -->
        <test-method is-config="true" signature="closure()[pri:0, instance:test.AlertHandlingTest@30c93896]" started-at="2023-02-16T19:40:52 CST" name="closure" finished-at="2023-02-16T19:40:53 CST" duration-ms="800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- test.AlertHandlingTest -->
    </test> <!-- TestAlert -->
    <test started-at="2023-02-16T19:40:37 CST" name="TestLogin" finished-at="2023-02-16T19:41:13 CST" duration-ms="36281">
      <class name="test.LoginTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:test.LoginTest@2bd08376]" started-at="2023-02-16T19:40:37 CST" name="openApplication" finished-at="2023-02-16T19:40:47 CST" duration-ms="10164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:test.LoginTest@2bd08376]" started-at="2023-02-16T19:40:47 CST" name="login" data-provider="getLoginData" finished-at="2023-02-16T19:40:52 CST" duration-ms="4791" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[farhana_shaheen@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Selenium23]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Successful]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closure()[pri:0, instance:test.LoginTest@2bd08376]" started-at="2023-02-16T19:40:52 CST" name="closure" finished-at="2023-02-16T19:40:53 CST" duration-ms="921" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
        <test-method is-config="true" signature="openApplication()[pri:0, instance:test.LoginTest@2bd08376]" started-at="2023-02-16T19:40:53 CST" name="openApplication" finished-at="2023-02-16T19:40:58 CST" duration-ms="5487" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:test.LoginTest@2bd08376]" started-at="2023-02-16T19:40:58 CST" name="login" data-provider="getLoginData" finished-at="2023-02-16T19:41:12 CST" duration-ms="14209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[farhana_shaheen@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closure()[pri:0, instance:test.LoginTest@2bd08376]" started-at="2023-02-16T19:41:12 CST" name="closure" finished-at="2023-02-16T19:41:13 CST" duration-ms="692" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- test.LoginTest -->
    </test> <!-- TestLogin -->
  </suite> <!-- Suite -->
</testng-results>
